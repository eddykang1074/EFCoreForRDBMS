// <auto-generated />
using System;
using EFCoreForMSSQL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreForMSSQL.Models.Migrations
{
    [DbContext(typeof(ChatAppDbContext))]
    partial class ChatAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreForMSSQL.Models.Channel", b =>
                {
                    b.Property<int>("ChannelIdx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("channel_idx");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelIdx"));

                    b.Property<string>("ChannelDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("channel_desc");

                    b.Property<string>("ChannelImgPath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("channel_img_path");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("channel_name");

                    b.Property<int>("ChannelTypeCode")
                        .HasColumnType("int")
                        .HasColumnName("channel_type_code");

                    b.Property<int>("LimitCnt")
                        .HasColumnType("int")
                        .HasColumnName("limit_cnt");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_date");

                    b.Property<int?>("ModifyMemberIdx")
                        .HasColumnType("int")
                        .HasColumnName("modify_member_idx");

                    b.Property<DateTime>("RegistDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("regist_date");

                    b.Property<int>("RegistMemberIdx")
                        .HasColumnType("int")
                        .HasColumnName("regist_member_idx");

                    b.Property<string>("ServiceDomain")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("service_domain");

                    b.Property<int>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("state_code");

                    b.HasKey("ChannelIdx")
                        .HasName("channel_pk");

                    b.ToTable("channels", (string)null);
                });

            modelBuilder.Entity("EFCoreForMSSQL.Models.ChannelLog", b =>
                {
                    b.Property<int>("ChannelLogIdx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("channel_log_idx");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelLogIdx"));

                    b.Property<string>("BrowserType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("browser_type");

                    b.Property<int>("ChannelIdx")
                        .HasColumnType("int")
                        .HasColumnName("channel_idx");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("connection_id");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("device_type");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ip_address");

                    b.Property<DateTime>("LoggingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("logging_date");

                    b.Property<int>("LoggingTypeCode")
                        .HasColumnType("int")
                        .HasColumnName("logging_type_code");

                    b.Property<int>("MemberIdx")
                        .HasColumnType("int")
                        .HasColumnName("member_idx");

                    b.Property<string>("Message")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("message");

                    b.HasKey("ChannelLogIdx")
                        .HasName("channel_logs_pk");

                    b.ToTable("channel_logs", (string)null);
                });

            modelBuilder.Entity("EFCoreForMSSQL.Models.ChannelMember", b =>
                {
                    b.Property<int>("ChannelIdx")
                        .HasColumnType("int")
                        .HasColumnName("channel_idx");

                    b.Property<int>("MemberIdx")
                        .HasColumnType("int")
                        .HasColumnName("member_idx");

                    b.Property<int>("ActiveCode")
                        .HasColumnType("int")
                        .HasColumnName("active_code");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("connection_id");

                    b.Property<DateTime?>("LastEntryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_entry_date");

                    b.Property<DateTime?>("LastOutDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_out_date");

                    b.Property<string>("MemberIpAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("member_ip_address");

                    b.Property<int>("MemberTypeCode")
                        .HasColumnType("int")
                        .HasColumnName("member_type_code");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_date");

                    b.Property<int?>("ModifyMemberIdx")
                        .HasColumnType("int")
                        .HasColumnName("modify_member_idx");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nick_name");

                    b.Property<string>("ProfileImgPath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("profile_img_path");

                    b.Property<DateTime>("RegistDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("regist_date");

                    b.Property<int>("RegistMemberIdx")
                        .HasColumnType("int")
                        .HasColumnName("regist_member_idx");

                    b.Property<string>("ServerIp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("server_ip");

                    b.Property<int>("StateCode")
                        .HasColumnType("int")
                        .HasColumnName("state_code");

                    b.HasKey("ChannelIdx", "MemberIdx")
                        .HasName("channel_members_pk");

                    b.ToTable("channel_members", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
